<section class="product-description">
    <div class="container">
      <ul class="tabs">
      <li class="active" data-cont=".one">Product Description</li>
      <li data-cont=".two">Product Reviews</li>
     {% for block in section.blocks %}
        {%- case block.type -%}        
           {%- when 'text' -%}
            <li data-cont=".three">Additional Infromation</li>  
          {% endcase %}
      {% endfor %}
    </ul>
    <div class="content">
       {% for block in section.blocks %} 
         {%- case block.type -%}        
           {%- when 'description' -%}
              <div class="one">
                 {{ product.description }}
             </div>
            {%- when '@app' -%}
              <div class="two"> {% render block %} </div>
            {%- when 'text' -%}
              <div class="three">
                <p class="product__text{% if block.settings.text_style == 'uppercase' %} caption-with-letter-spacing{% elsif block.settings.text_style == 'subtitle' %} subtitle{% endif %}" {{ block.shopify_attributes }}>
                  {{- block.settings.text -}}
                </p>
              </div>
          {%- endcase -%}
      {% endfor %}
    </div>
  </div>
</section>


{% schema %}
  {
    "name": "Description",
    "settings": [],
    "blocks":
    [
       {
          "type": "@app"
       },
        {
          "type": "description",
          "name": "Description",
          "limit": 1
        },
    {
      "type": "text",
      "name": "t:sections.main-product.blocks.text.name",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "default": "Text block",
          "label": "t:sections.main-product.blocks.text.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "body",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__1.label"
            },
            {
              "value": "subtitle",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__2.label"
            },
            {
              "value": "uppercase",
              "label": "t:sections.main-product.blocks.text.settings.text_style.options__3.label"
            }
          ],
          "default": "body",
          "label": "t:sections.main-product.blocks.text.settings.text_style.label"
        }
      ]
    }
    ]
  }
{% endschema %}

{% stylesheet %}
  .tabs {
  display: flex;
  list-style: none;
  padding: 0;
  margin: 0;
}
.tabs li {
  padding: 10px;
  background-color: #f6f4f4;
  border-right: 1px solid white;
  cursor: pointer;
  transition: 0.2s;
}
.tabs li.active,
.tabs li:hover {
  background-color: #ddd;
}
.content {
  background-color: #ddd;
}
.content > div {
  padding: 20px;
}
.content > div:not(:first-child) {
  display: none;
}

  ul.tabs li {
    border: 1px solid #ddd;
    font-weight: bold;
    color: #3e3e3e;
}

.content {
    border: 1px solid #ddd;
}

.tabs li.active {
    color: #047835;
    font-weight: bold;
}

section.product-description {
    margin-bottom: 60px;
}
  
{% endstylesheet %}
{% javascript %}
let tabs = document.querySelectorAll(".tabs li");
let tabsArray = Array.from(tabs);
let divs = document.querySelectorAll(".content > div");
let divsArray = Array.from(divs);

// console.log(tabsArray);

tabsArray.forEach((ele) => {
  ele.addEventListener("click", function (e) {
    // console.log(ele);
    tabsArray.forEach((ele) => {
      ele.classList.remove("active");
    });
    e.currentTarget.classList.add("active");
    divsArray.forEach((div) => {
      div.style.display = "none";
    });
    // console.log(e.currentTarget.dataset.cont);
    document.querySelector(e.currentTarget.dataset.cont).style.display = "block";
  });
});
  
{% endjavascript %}